var = " The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).  The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).  The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).  The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding).However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). The computed shared secret will be equal to the size of the prime (in bits). In this case the prime is 1024 bits, so the shared secret will be 128 bytes (128 * 8 = 1024). However, the result is returned as an SSH1-encoded bignum in hex string format. The SSH1-encoding prepends a 2-byte count, so the result is going  to be 2 bytes longer: 130 bytes.  This results in a hex string that is 260 characters long (two chars per byte for the hex encoding). Hello dai"
